# .github/workflows/azure-deploy.yml
name: Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
  IMAGE_NAME: trigger-game
  VITE_WS_SERVER_URL: ${{ vars.VITE_WS_SERVER_URL }}
  WEB_PUBSUB_AUTH_API_URL: ${{ vars.WEB_PUBSUB_AUTH_API_URL }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    # Install dependencies and run tests
    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test --if-present

    - name: Run linting
      run: npm run lint --if-present

    # Build Docker image
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

    - name: Build and push Docker image
      run: |
        # Generate unique tag
        IMAGE_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        LATEST_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
        # Build image
        docker build \
          --build-arg VITE_WS_SERVER_URL=${{ vars.VITE_WS_SERVER_URL }} \
          --build-arg WEB_PUBSUB_AUTH_API_URL=${{ vars.WEB_PUBSUB_AUTH_API_URL }} \
          --build-arg NODE_ENV=production \
          -t $IMAGE_TAG \
          -t $LATEST_TAG .

        # Push images
        docker push $IMAGE_TAG
        docker push $LATEST_TAG
        
        # Set output for next step
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    # Deploy to Azure Container Apps
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Container Apps Áí∞Â¢É„ÅÆÁ¢∫‰øù
    - name: Ensure Container Apps Environment
      run: |
        # Container Apps Áí∞Â¢É„ÅåÂ≠òÂú®„Åô„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
        az containerapp env show \
          --name trigger-game-env \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --query "name" --output tsv || \
        az containerapp env create \
          --name trigger-game-env \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --location japaneast

    # Container Apps „Å∏„ÅÆ„Éá„Éó„É≠„Ç§
    - name: Deploy to Azure Container Apps
      run: |
        # Container App „ÅåÂ≠òÂú®„Åô„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Å¶Êõ¥Êñ∞„Åæ„Åü„ÅØ‰ΩúÊàê
        if az containerapp show \
          --name ${{ secrets.AZURE_CONTAINER_NAME }} \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --query "name" --output tsv > /dev/null 2>&1; then
          
          echo "Container App „ÅåÂ≠òÂú®„Åó„Åæ„Åô„ÄÇÊõ¥Êñ∞‰∏≠..."
          az containerapp update \
            --name ${{ secrets.AZURE_CONTAINER_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --image ${{ env.IMAGE_TAG }} \
            --set-env-vars \
              NODE_ENV=production \
              PORT=3000 \
              VITE_WS_SERVER_URL=${{ vars.VITE_WS_SERVER_URL }} \
              WEB_PUBSUB_AUTH_API_URL=${{ vars.WEB_PUBSUB_AUTH_API_URL }}
        else
          echo "Container App „ÅåÂ≠òÂú®„Åó„Åæ„Åõ„Çì„ÄÇÊñ∞Ë¶è‰ΩúÊàê‰∏≠..."
          az containerapp create \
            --name ${{ secrets.AZURE_CONTAINER_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --environment trigger-game-env \
            --image ${{ env.IMAGE_TAG }} \
            --target-port 3000 \
            --ingress external \
            --min-replicas 0 \
            --max-replicas 5 \
            --cpu 0.5 \
            --memory 1Gi \
            --registry-server ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }} \
            --registry-username ${{ secrets.AZURE_REGISTRY_USERNAME }} \
            --registry-password ${{ secrets.AZURE_REGISTRY_PASSWORD }} \
            --env-vars \
              NODE_ENV=production \
              PORT=3000 \
              VITE_WS_SERVER_URL=${{ vars.VITE_WS_SERVER_URL }} \
              WEB_PUBSUB_AUTH_API_URL=${{ vars.WEB_PUBSUB_AUTH_API_URL }}
        fi

    # Get deployment URLÔºàContainer Apps Áî®Ôºâ
    - name: Get Container App URL
      run: |
        FQDN=$(az containerapp show \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --name ${{ secrets.AZURE_CONTAINER_NAME }} \
          --query properties.configuration.ingress.fqdn \
          --output tsv)
        echo "üöÄ Deployment successful!"
        echo "üåê Application URL: https://$FQDN"